// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}


model User {
  id          String   @id @default(uuid()) // Clerk user ID
  email       String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  workspaces  Workspace[] // Users can own multiple workspaces
  tables      Table[]     // Users can own multiple tables directly
  records     Record[]    // Records created by the user
  views       View[]      // Views created by the user
}

model Workspace {
  id          String   @id @default(uuid())
  name        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  ownerId     String
  owner       User     @relation(fields: [ownerId], references: [id])
  tables      Table[]
  @@index([ownerId])
}

model Table {
  id          String   @id @default(uuid())
  workspaceId String
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  name        String
  columns     Json     // JSON array of column definitions (name, type, etc.)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  records     Record[]
  views       View[]
  @@index([workspaceId])
  @@index([userId])
}

model Record {
  id          String   @id @default(uuid())
  tableId     String
  table       Table    @relation(fields: [tableId], references: [id])
  data        Json     // JSONB for flexible, schema-less row data
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdById String?
  createdBy   User?    @relation(fields: [createdById], references: [id])
  @@index([tableId])
  @@index([data], type: Gin) // GIN index for efficient JSONB queries
}

model View {
  id          String   @id @default(uuid())
  tableId     String
  table       Table    @relation(fields: [tableId], references: [id])
  name        String
  config      Json     // JSON for view settings (filters, sort, visible columns)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdById String?
  createdBy   User?    @relation(fields: [createdById], references: [id])
  isPublic    Boolean  @default(false)
  @@index([tableId])
}